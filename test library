-- Ne0e's Enhanced Library V3

local Library = {
    Intro = {
        Enabled = true,
        Title = "Ne0e Library",
        Subtitle = "Loading...",
        Note = "by Ne0e",
        LoadingTime = 2,
        BackgroundColor = Color3.fromRGB(15, 15, 15),
        MainTextColor = Color3.fromRGB(255, 255, 255),
        SubTextColor = Color3.fromRGB(200, 200, 200)
    }
}

-- Services
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local UserInputService = game:GetService("UserInputService")

-- Constants
local TWEEN_INFO = TweenInfo.new(0.3, Enum.EasingStyle.Quart)
local CORNER_RADIUS = UDim.new(0, 6)

-- Create Intro Animation
local function CreateIntro()
    if not Library.Intro.Enabled then return end
    
    local IntroGui = Instance.new("ScreenGui")
    IntroGui.Name = "Ne0eIntro"
    IntroGui.Parent = CoreGui
    
    local Background = Instance.new("Frame")
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.BackgroundColor3 = Library.Intro.BackgroundColor
    Background.BackgroundTransparency = 1
    Background.Parent = IntroGui
    
    local MainContainer = Instance.new("Frame")
    MainContainer.Size = UDim2.new(0, 300, 0, 200)
    MainContainer.Position = UDim2.new(0.5, -150, 0.5, -100)
    MainContainer.BackgroundTransparency = 1
    MainContainer.Parent = Background
    
    local Title = Instance.new("TextLabel")
    Title.Size = UDim2.new(1, 0, 0, 40)
    Title.Position = UDim2.new(0, 0, 0.2, 0)
    Title.BackgroundTransparency = 1
    Title.Text = Library.Intro.Title
    Title.TextColor3 = Library.Intro.MainTextColor
    Title.TextSize = 32
    Title.Font = Enum.Font.GothamBold
    Title.TextTransparency = 1
    Title.Parent = MainContainer
    
    local LoadingText = Instance.new("TextLabel")
    LoadingText.Size = UDim2.new(1, 0, 0, 20)
    LoadingText.Position = UDim2.new(0, 0, 0.5, 0)
    LoadingText.BackgroundTransparency = 1
    LoadingText.Text = Library.Intro.Subtitle
    LoadingText.TextColor3 = Library.Intro.SubTextColor
    LoadingText.TextSize = 16
    LoadingText.Font = Enum.Font.Gotham
    LoadingText.TextTransparency = 1
    LoadingText.Parent = MainContainer
    
    local ProgressBar = Instance.new("Frame")
    ProgressBar.Size = UDim2.new(0.8, 0, 0, 2)
    ProgressBar.Position = UDim2.new(0.1, 0, 0.7, 0)
    ProgressBar.BackgroundColor3 = Library.Intro.MainTextColor
    ProgressBar.BackgroundTransparency = 1
    ProgressBar.Parent = MainContainer
    
    local Note = Instance.new("TextLabel")
    Note.Size = UDim2.new(1, 0, 0, 20)
    Note.Position = UDim2.new(0, 0, 0.85, 0)
    Note.BackgroundTransparency = 1
    Note.Text = Library.Intro.Note
    Note.TextColor3 = Library.Intro.SubTextColor
    Note.TextSize = 14
    Note.Font = Enum.Font.GothamSemibold
    Note.TextTransparency = 1
    Note.Parent = MainContainer
    
    -- Animate Intro
    TweenService:Create(Background, TweenInfo.new(0.5), {BackgroundTransparency = 0}):Play()
    wait(0.3)
    TweenService:Create(Title, TweenInfo.new(0.7), {TextTransparency = 0}):Play()
    wait(0.2)
    TweenService:Create(LoadingText, TweenInfo.new(0.7), {TextTransparency = 0}):Play()
    TweenService:Create(ProgressBar, TweenInfo.new(0.7), {BackgroundTransparency = 0}):Play()
    wait(0.2)
    TweenService:Create(Note, TweenInfo.new(0.7), {TextTransparency = 0}):Play()
    
    -- Progress Bar Animation
    TweenService:Create(ProgressBar, TweenInfo.new(Library.Intro.LoadingTime, Enum.EasingStyle.Linear), {Size = UDim2.new(0.8, 0, 0, 2)}):Play()
    wait(Library.Intro.LoadingTime)
    
    -- Fade Out
    TweenService:Create(Background, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    TweenService:Create(Title, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    TweenService:Create(LoadingText, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    TweenService:Create(ProgressBar, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
    TweenService:Create(Note, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
    wait(0.5)
    IntroGui:Destroy()
end

function Library:CreateWindow(title)
    CreateIntro()
    wait(Library.Intro.LoadingTime + 1)
    
    -- Main GUI
    local NeoeLibrary = Instance.new("ScreenGui")
    NeoeLibrary.Name = "NeoeLibrary"
    NeoeLibrary.Parent = CoreGui
    
    -- Main Window
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 500, 0, 350)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Parent = NeoeLibrary
    Instance.new("UICorner", MainFrame).CornerRadius = CORNER_RADIUS
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame
    Instance.new("UICorner", TitleBar).CornerRadius = CORNER_RADIUS
    
    -- Make window draggable
    local dragging = false
    local dragInput
    local dragStart
    local startPos
    
    local function updateDrag(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
    
    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    TitleBar.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            updateDrag(input)
        end
    end)
    
    -- Title
    local TitleText = Instance.new("TextLabel")
    TitleText.Size = UDim2.new(1, -100, 1, 0)
    TitleText.Position = UDim2.new(0, 10, 0, 0)
    TitleText.BackgroundTransparency = 1
    TitleText.Text = title or "Ne0e Library"
    TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleText.TextSize = 14
    TitleText.Font = Enum.Font.GothamBold
    TitleText.TextXAlignment = Enum.TextXAlignment.Left
    TitleText.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Position = UDim2.new(1, -27, 0, 3)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
    CloseButton.Text = "Ã—"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 16
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = TitleBar
    Instance.new("UICorner", CloseButton).CornerRadius = UDim.new(0, 4)
    
    -- Minimize Button
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Size = UDim2.new(0, 24, 0, 24)
    MinimizeButton.Position = UDim2.new(1, -54, 0, 3)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 180, 50)
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.TextSize = 16
    MinimizeButton.Font = Enum.Font.GothamBold
    MinimizeButton.Parent = TitleBar
    Instance.new("UICorner", MinimizeButton).CornerRadius = UDim.new(0, 4)
    
    -- Tabs Container (Scrolling)
    local TabsScrollFrame = Instance.new("ScrollingFrame")
    TabsScrollFrame.Name = "TabsScrollFrame"
    TabsScrollFrame.Size = UDim2.new(0, 120, 1, -35)
    TabsScrollFrame.Position = UDim2.new(0, 5, 0, 35)
    TabsScrollFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    TabsScrollFrame.BorderSizePixel = 0
    TabsScrollFrame.ScrollBarThickness = 2
    TabsScrollFrame.ScrollBarImageColor3 = Color3.fromRGB(55, 55, 55)
    TabsScrollFrame.Parent = MainFrame
    Instance.new("UICorner", TabsScrollFrame).CornerRadius = CORNER_RADIUS
    
    local TabList = Instance.new("UIListLayout")
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 5)
    TabList.Parent = TabsScrollFrame
    
    local TabPadding = Instance.new("UIPadding")
    TabPadding.PaddingTop = UDim.new(0, 5)
    TabPadding.PaddingLeft = UDim.new(0, 5)
    TabPadding.PaddingRight = UDim.new(0, 5)
    TabPadding.Parent = TabsScrollFrame
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -135, 1, -35)
    ContentContainer.Position = UDim2.new(0, 130, 0, 35)
    ContentContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    ContentContainer.BorderSizePixel = 0
    ContentContainer.Parent = MainFrame
    Instance.new("UICorner", ContentContainer).CornerRadius = CORNER_RADIUS
    
    -- Window State
    local minimized = false
    local originalSize = MainFrame.Size
    
    -- Minimize/Close Functions
    MinimizeButton.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            MainFrame:TweenSize(UDim2.new(0, 500, 0, 30), "Out", "Quad", 0.3, true)
        else
            MainFrame:TweenSize(originalSize, "Out", "Quad", 0.3, true)
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        NeoeLibrary:Destroy()
    end)
    
    -- Update ScrollingFrame canvas size when tabs are added
    TabList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabsScrollFrame.CanvasSize = UDim2.new(0, 0, 0, TabList.AbsoluteContentSize.Y + 10)
    end)
    
    local Window = {}
    
    function Window:CreateTab(name)
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = name
        TabButton.Size = UDim2.new(1, -10, 0, 30)
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 14
        TabButton.Font = Enum.Font.Gotham
        TabButton.Parent = TabsScrollFrame
        Instance.new("UICorner", TabButton).CornerRadius = CORNER_RADIUS
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = name.."Content"
        TabContent.Size = UDim2.new(1, -10, 1, -10)
        TabContent.Position = UDim2.new(0, 5, 0, 5)
        TabContent.BackgroundTransparency = 1
        TabContent.ScrollBarThickness = 2
        TabContent.ScrollBarImageColor3 = Color3.fromRGB(55, 55, 55)
        TabContent.Visible = false
        TabContent.Parent = ContentContainer
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 5)
        ContentList.Parent = TabContent
        
        local ContentPadding = Instance.new("UIPadding")
        ContentPadding.PaddingTop = UDim.new(0, 5)
        ContentPadding.PaddingLeft = UDim.new(0, 5)
        ContentPadding.PaddingRight = UDim.new(0, 5)
        ContentPadding.Parent = TabContent
        
        -- Update content scrolling
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 10)
        end)
        
        TabButton.MouseButton1Click:Connect(function()
            for _, content in pairs(ContentContainer:GetChildren()) do
                if content:IsA("ScrollingFrame") then
                    content.Visible = false
                end
            end
            TabContent.Visible = true
            
            for _, button in pairs(TabsScrollFrame:GetChildren()) do
                if button:IsA("TextButton") then
                    TweenService:Create(button, TWEEN_INFO, {
                        BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                    }):Play()
                end
            end
            TweenService:Create(TabButton, TWEEN_INFO, {
                BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            }):Play()
        end)
        
        local Tab = {}
        
        function Tab:AddButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -10, 0, 30)
            Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            Button.Text = text
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            Button.Font = Enum.Font.Gotham
            Button.Parent = TabContent
            Instance.new("UICorner", Button).CornerRadius = CORNER_RADIUS
            
            Button.MouseButton1Click:Connect(function()
                callback()
            end)
            
            Button.MouseEnter:Connect(function()
                TweenService:Create(Button, TWEEN_INFO, {
                    BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                }):Play()
            end)
            
            Button.MouseLeave:Connect(function()
                TweenService:Create(Button, TWEEN_INFO, {
                    BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                }):Play()
            end)
        end
        
        function Tab:AddToggle(text, default, callback)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Size = UDim2.new(1, -10, 0, 30)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            ToggleFrame.Parent = TabContent
            Instance.new("UICorner", ToggleFrame).CornerRadius = CORNER_RADIUS
            
            local ToggleText = Instance.new("TextLabel")
            ToggleText.Size = UDim2.new(1, -50, 1, 0)
            ToggleText.Position = UDim2.new(0, 10, 0, 0)
            ToggleText.BackgroundTransparency = 1
            ToggleText.Text = text
            ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleText.TextSize = 14
            ToggleText.Font = Enum.Font.Gotham
            ToggleText.TextXAlignment = Enum.TextXAlignment.Left
            ToggleText.Parent = ToggleFrame
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(0, 40, 0, 20)
            ToggleButton.Position = UDim2.new(1, -45, 0.5, -10)
            ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            ToggleButton.Text = ""
            ToggleButton.Parent = ToggleFrame
            Instance.new("UICorner", ToggleButton).CornerRadius = UDim.new(1, 0)
            
            local ToggleCircle = Instance.new("Frame")
            ToggleCircle.Size = UDim2.new(0, 16, 0, 16)
            ToggleCircle.Position = UDim2.new(0, 2, 0.5, -8)
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleCircle.Parent = ToggleButton
            Instance.new("UICorner", ToggleCircle).CornerRadius = UDim.new(1, 0)
            
            local toggled = default or false
            
            local function updateToggle()
                if toggled then
                    TweenService:Create(ToggleButton, TWEEN_INFO, {
                        BackgroundColor3 = Color3.fromRGB(80, 225, 120)
                    }):Play()
                    TweenService:Create(ToggleCircle, TWEEN_INFO, {
                        Position = UDim2.new(1, -18, 0.5, -8)
                    }):Play()
                else
                    TweenService:Create(ToggleButton, TWEEN_INFO, {
                        BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                    }):Play()
                    TweenService:Create(ToggleCircle, TWEEN_INFO, {
                        Position = UDim2.new(0, 2, 0.5, -8)
                    }):Play()
                end
                callback(toggled)
            end
            
            updateToggle()
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                updateToggle()
            end)
        end
        
        function Tab:AddSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Size = UDim2.new(1, -10, 0, 50)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            SliderFrame.Parent = TabContent
            Instance.new("UICorner", SliderFrame).CornerRadius = CORNER_RADIUS
            
            local SliderText = Instance.new("TextLabel")
            SliderText.Size = UDim2.new(1, -10, 0, 20)
            SliderText.Position = UDim2.new(0, 10, 0, 5)
            SliderText.BackgroundTransparency = 1
            SliderText.Text = text
            SliderText.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderText.TextSize = 14
            SliderText.Font = Enum.Font.Gotham
            SliderText.TextXAlignment = Enum.TextXAlignment.Left
            SliderText.Parent = SliderFrame
            
            local SliderValueText = Instance.new("TextLabel")
            SliderValueText.Size = UDim2.new(0, 30, 0, 20)
            SliderValueText.Position = UDim2.new(1, -35, 0, 5)
            SliderValueText.BackgroundTransparency = 1
            SliderValueText.Text = tostring(default or min)
            SliderValueText.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValueText.TextSize = 14
            SliderValueText.Font = Enum.Font.Gotham
            SliderValueText.Parent = SliderFrame
            
            local SliderBar = Instance.new("Frame")
            SliderBar.Size = UDim2.new(1, -20, 0, 4)
            SliderBar.Position = UDim2.new(0, 10, 0, 35)
            SliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            SliderBar.Parent = SliderFrame
            Instance.new("UICorner", SliderBar).CornerRadius = UDim.new(1, 0)
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new(0, 0, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(80, 225, 120)
            SliderFill.Parent = SliderBar
            Instance.new("UICorner", SliderFill).CornerRadius = UDim.new(1, 0)
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.BackgroundTransparency = 1
            SliderButton.Text = ""
            SliderButton.Parent = SliderBar
            
            local value = default or min
            local dragging = false
            
            local function updateSlider(input)
                local pos = UDim2.new(math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1), 0, 1, 0)
                SliderFill.Size = pos
                
                local sliderValue = math.floor(((pos.X.Scale * (max - min)) + min) * 100) / 100
                value = sliderValue
                SliderValueText.Text = tostring(sliderValue)
                callback(sliderValue)
            end
            
            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            -- Set default value
            SliderFill.Size = UDim2.new((value - min) / (max - min), 0, 1, 0)
        end
        
        -- Show first tab by default
        if #TabsScrollFrame:GetChildren() == 3 then -- UIListLayout and UIPadding count as children
            TabContent.Visible = true
            TweenService:Create(TabButton, TWEEN_INFO, {
                BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            }):Play()
        end
        
        return Tab
    end
    
    return Window
end

return Library
